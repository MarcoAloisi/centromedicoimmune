# Generated by Django 5.1.1 on 2024-09-22 15:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('estado', models.CharField(choices=[('Programada', 'Programada'), ('Completada', 'Completada'), ('Cancelada', 'Cancelada')], max_length=20)),
                ('motivo', models.CharField(blank=True, max_length=255, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('fecha_nacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=10)),
                ('direccion', models.CharField(max_length=255)),
                ('telefono', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="El número de teléfono debe estar en el formato: '+999999999'. Hasta 15 dígitos permitidos.", regex='^\\+?1?\\d{9,15}$')])),
                ('correo_electronico', models.EmailField(max_length=254, unique=True)),
                ('historial_medico', models.TextField(blank=True, null=True)),
                ('informacion_seguro', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='PersonalMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('rol', models.CharField(choices=[('Doctor', 'Doctor'), ('Enfermero', 'Enfermero'), ('Tecnico', 'Técnico')], max_length=50)),
                ('especializacion', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="El número de teléfono debe estar en el formato: '+999999999'. Hasta 15 dígitos permitidos.", regex='^\\+?1?\\d{9,15}$')])),
                ('correo_electronico', models.EmailField(max_length=254, unique=True)),
                ('fecha_contratacion', models.DateField(blank=True, null=True)),
                ('licencia', models.CharField(blank=True, max_length=100, null=True)),
                ('certificaciones', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Personal Médico',
                'verbose_name_plural': 'Personal Médico',
            },
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('costo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('categoria', models.CharField(blank=True, max_length=100, null=True)),
                ('duracion', models.DurationField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tratamiento',
                'verbose_name_plural': 'Tratamientos',
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True)),
                ('pagado', models.BooleanField(default=False)),
                ('fecha_pago', models.DateTimeField(blank=True, null=True)),
                ('numero_factura', models.CharField(editable=False, max_length=20, unique=True)),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='centroimmune.cita')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='centroimmune.paciente')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='centroimmune.paciente'),
        ),
        migrations.AddField(
            model_name='cita',
            name='personal_medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='centroimmune.personalmedico'),
        ),
        migrations.CreateModel(
            name='ConsentimientoInformado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_consentimiento', models.TextField()),
                ('fecha_firma', models.DateTimeField(auto_now_add=True)),
                ('firmado', models.BooleanField(default=False)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consentimientos', to='centroimmune.paciente')),
                ('personal_medico', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consentimientos', to='centroimmune.personalmedico')),
                ('tratamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consentimientos', to='centroimmune.tratamiento')),
            ],
            options={
                'verbose_name': 'Consentimiento Informado',
                'verbose_name_plural': 'Consentimientos Informados',
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='tratamiento',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas', to='centroimmune.tratamiento'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('medico', 'Personal Médico'), ('paciente', 'Paciente')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='personalmedico',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medico_profile', to='centroimmune.user'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paciente_profile', to='centroimmune.user'),
        ),
    ]
